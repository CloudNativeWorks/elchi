// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.7
//   protoc               unknown
// source: udpa/annotations/security.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import { messageTypeRegistry } from "../../typeRegistry";

export const protobufPackage = "udpa.annotations";

/**
 * These annotations indicate metadata for the purpose of understanding the
 * security significance of fields.
 */
export interface FieldSecurityAnnotation {
  $type: "udpa.annotations.FieldSecurityAnnotation";
  /** Field should be set in the presence of untrusted downstreams. */
  configure_for_untrusted_downstream?:
    | boolean
    | undefined;
  /** Field should be set in the presence of untrusted upstreams. */
  configure_for_untrusted_upstream?: boolean | undefined;
}

function createBaseFieldSecurityAnnotation(): FieldSecurityAnnotation {
  return { $type: "udpa.annotations.FieldSecurityAnnotation" };
}

export const FieldSecurityAnnotation: MessageFns<FieldSecurityAnnotation, "udpa.annotations.FieldSecurityAnnotation"> =
  {
    $type: "udpa.annotations.FieldSecurityAnnotation" as const,

    encode(message: FieldSecurityAnnotation, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
      if (
        message.configure_for_untrusted_downstream !== undefined && message.configure_for_untrusted_downstream !== false
      ) {
        writer.uint32(8).bool(message.configure_for_untrusted_downstream);
      }
      if (
        message.configure_for_untrusted_upstream !== undefined && message.configure_for_untrusted_upstream !== false
      ) {
        writer.uint32(16).bool(message.configure_for_untrusted_upstream);
      }
      return writer;
    },

    decode(input: BinaryReader | Uint8Array, length?: number): FieldSecurityAnnotation {
      const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
      let end = length === undefined ? reader.len : reader.pos + length;
      const message = createBaseFieldSecurityAnnotation();
      while (reader.pos < end) {
        const tag = reader.uint32();
        switch (tag >>> 3) {
          case 1: {
            if (tag !== 8) {
              break;
            }

            message.configure_for_untrusted_downstream = reader.bool();
            continue;
          }
          case 2: {
            if (tag !== 16) {
              break;
            }

            message.configure_for_untrusted_upstream = reader.bool();
            continue;
          }
        }
        if ((tag & 7) === 4 || tag === 0) {
          break;
        }
        reader.skip(tag & 7);
      }
      return message;
    },

    fromJSON(object: any): FieldSecurityAnnotation {
      return {
        $type: FieldSecurityAnnotation.$type,
        configure_for_untrusted_downstream: isSet(object.configure_for_untrusted_downstream)
          ? globalThis.Boolean(object.configure_for_untrusted_downstream)
          : undefined,
        configure_for_untrusted_upstream: isSet(object.configure_for_untrusted_upstream)
          ? globalThis.Boolean(object.configure_for_untrusted_upstream)
          : undefined,
      };
    },

    toJSON(message: FieldSecurityAnnotation): unknown {
      const obj: any = {};
      if (message.configure_for_untrusted_downstream !== undefined) {
        obj.configure_for_untrusted_downstream = message.configure_for_untrusted_downstream;
      }
      if (message.configure_for_untrusted_upstream !== undefined) {
        obj.configure_for_untrusted_upstream = message.configure_for_untrusted_upstream;
      }
      return obj;
    },

    create<I extends Exact<DeepPartial<FieldSecurityAnnotation>, I>>(base?: I): FieldSecurityAnnotation {
      return FieldSecurityAnnotation.fromPartial(base ?? ({} as any));
    },
    fromPartial<I extends Exact<DeepPartial<FieldSecurityAnnotation>, I>>(object: I): FieldSecurityAnnotation {
      const message = createBaseFieldSecurityAnnotation();
      message.configure_for_untrusted_downstream = object.configure_for_untrusted_downstream ?? undefined;
      message.configure_for_untrusted_upstream = object.configure_for_untrusted_upstream ?? undefined;
      return message;
    },
  };

messageTypeRegistry.set(FieldSecurityAnnotation.$type, FieldSecurityAnnotation);

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends { $case: string } ? { [K in keyof Omit<T, "$case">]?: DeepPartial<T[K]> } & { $case: T["$case"] }
  : T extends {} ? { [K in Exclude<keyof T, "$type">]?: DeepPartial<T[K]> }
  : Partial<T>;

type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin ? P
  : P & { [K in keyof P]: Exact<P[K], I[K]> } & { [K in Exclude<keyof I, KeysOfUnion<P> | "$type">]: never };

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T, V extends string> {
  readonly $type: V;
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;
  fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;
}
