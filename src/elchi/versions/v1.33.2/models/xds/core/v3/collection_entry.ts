// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.7
//   protoc               unknown
// source: xds/core/v3/collection_entry.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import { Any } from "../../../google/protobuf/any";
import { messageTypeRegistry } from "../../../typeRegistry";
import { ResourceLocator } from "./resource_locator";

export const protobufPackage = "xds.core.v3";

/**
 * xDS collection resource wrapper. This encapsulates a xDS resource when
 * appearing inside a list collection resource. List collection resources are
 * regular Resource messages of type:
 *
 * .. code-block:: proto
 *
 *   message <T>Collection {
 *     repeated CollectionEntry resources = 1;
 *   }
 */
export interface CollectionEntry {
  $type: "xds.core.v3.CollectionEntry";
  resource_specifier?:
    | //
    /** A resource locator describing how the member resource is to be located. */
    { $case: "locator"; locator: ResourceLocator }
    | //
    /** The resource is inlined in the list collection. */
    { $case: "inline_entry"; inline_entry: CollectionEntry_InlineEntry }
    | undefined;
}

/** Inlined resource entry. */
export interface CollectionEntry_InlineEntry {
  $type: "xds.core.v3.CollectionEntry.InlineEntry";
  /**
   * Optional name to describe the inlined resource. Resource names must match
   * ``[a-zA-Z0-9_-\./]+`` (TODO(htuch): turn this into a PGV constraint once
   * finalized, probably should be a RFC3986 pchar). This name allows
   * reference via the #entry directive in ResourceLocator.
   */
  name?:
    | string
    | undefined;
  /**
   * The resource's logical version. It is illegal to have the same named xDS
   * resource name at a given version with different resource payloads.
   */
  version?:
    | string
    | undefined;
  /** The resource payload, including type URL. */
  resource?: Any | undefined;
}

function createBaseCollectionEntry(): CollectionEntry {
  return { $type: "xds.core.v3.CollectionEntry", resource_specifier: undefined };
}

export const CollectionEntry: MessageFns<CollectionEntry, "xds.core.v3.CollectionEntry"> = {
  $type: "xds.core.v3.CollectionEntry" as const,

  encode(message: CollectionEntry, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    switch (message.resource_specifier?.$case) {
      case "locator":
        ResourceLocator.encode(message.resource_specifier.locator, writer.uint32(10).fork()).join();
        break;
      case "inline_entry":
        CollectionEntry_InlineEntry.encode(message.resource_specifier.inline_entry, writer.uint32(18).fork()).join();
        break;
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): CollectionEntry {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseCollectionEntry();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1: {
          if (tag !== 10) {
            break;
          }

          message.resource_specifier = { $case: "locator", locator: ResourceLocator.decode(reader, reader.uint32()) };
          continue;
        }
        case 2: {
          if (tag !== 18) {
            break;
          }

          message.resource_specifier = {
            $case: "inline_entry",
            inline_entry: CollectionEntry_InlineEntry.decode(reader, reader.uint32()),
          };
          continue;
        }
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): CollectionEntry {
    return {
      $type: CollectionEntry.$type,
      resource_specifier: isSet(object.locator)
        ? { $case: "locator", locator: ResourceLocator.fromJSON(object.locator) }
        : isSet(object.inline_entry)
        ? { $case: "inline_entry", inline_entry: CollectionEntry_InlineEntry.fromJSON(object.inline_entry) }
        : undefined,
    };
  },

  toJSON(message: CollectionEntry): unknown {
    const obj: any = {};
    if (message.resource_specifier?.$case === "locator") {
      obj.locator = ResourceLocator.toJSON(message.resource_specifier.locator);
    }
    if (message.resource_specifier?.$case === "inline_entry") {
      obj.inline_entry = CollectionEntry_InlineEntry.toJSON(message.resource_specifier.inline_entry);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<CollectionEntry>, I>>(base?: I): CollectionEntry {
    return CollectionEntry.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<CollectionEntry>, I>>(object: I): CollectionEntry {
    const message = createBaseCollectionEntry();
    if (
      object.resource_specifier?.$case === "locator" &&
      object.resource_specifier?.locator !== undefined &&
      object.resource_specifier?.locator !== null
    ) {
      message.resource_specifier = {
        $case: "locator",
        locator: ResourceLocator.fromPartial(object.resource_specifier.locator),
      };
    }
    if (
      object.resource_specifier?.$case === "inline_entry" &&
      object.resource_specifier?.inline_entry !== undefined &&
      object.resource_specifier?.inline_entry !== null
    ) {
      message.resource_specifier = {
        $case: "inline_entry",
        inline_entry: CollectionEntry_InlineEntry.fromPartial(object.resource_specifier.inline_entry),
      };
    }
    return message;
  },
};

messageTypeRegistry.set(CollectionEntry.$type, CollectionEntry);

function createBaseCollectionEntry_InlineEntry(): CollectionEntry_InlineEntry {
  return { $type: "xds.core.v3.CollectionEntry.InlineEntry" };
}

export const CollectionEntry_InlineEntry: MessageFns<
  CollectionEntry_InlineEntry,
  "xds.core.v3.CollectionEntry.InlineEntry"
> = {
  $type: "xds.core.v3.CollectionEntry.InlineEntry" as const,

  encode(message: CollectionEntry_InlineEntry, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.name !== undefined && message.name !== "") {
      writer.uint32(10).string(message.name);
    }
    if (message.version !== undefined && message.version !== "") {
      writer.uint32(18).string(message.version);
    }
    if (message.resource !== undefined) {
      Any.encode(message.resource, writer.uint32(26).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): CollectionEntry_InlineEntry {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseCollectionEntry_InlineEntry();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1: {
          if (tag !== 10) {
            break;
          }

          message.name = reader.string();
          continue;
        }
        case 2: {
          if (tag !== 18) {
            break;
          }

          message.version = reader.string();
          continue;
        }
        case 3: {
          if (tag !== 26) {
            break;
          }

          message.resource = Any.decode(reader, reader.uint32());
          continue;
        }
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): CollectionEntry_InlineEntry {
    return {
      $type: CollectionEntry_InlineEntry.$type,
      name: isSet(object.name) ? globalThis.String(object.name) : undefined,
      version: isSet(object.version) ? globalThis.String(object.version) : undefined,
      resource: isSet(object.resource) ? Any.fromJSON(object.resource) : undefined,
    };
  },

  toJSON(message: CollectionEntry_InlineEntry): unknown {
    const obj: any = {};
    if (message.name !== undefined) {
      obj.name = message.name;
    }
    if (message.version !== undefined) {
      obj.version = message.version;
    }
    if (message.resource !== undefined) {
      obj.resource = Any.toJSON(message.resource);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<CollectionEntry_InlineEntry>, I>>(base?: I): CollectionEntry_InlineEntry {
    return CollectionEntry_InlineEntry.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<CollectionEntry_InlineEntry>, I>>(object: I): CollectionEntry_InlineEntry {
    const message = createBaseCollectionEntry_InlineEntry();
    message.name = object.name ?? undefined;
    message.version = object.version ?? undefined;
    message.resource = (object.resource !== undefined && object.resource !== null)
      ? Any.fromPartial(object.resource)
      : undefined;
    return message;
  },
};

messageTypeRegistry.set(CollectionEntry_InlineEntry.$type, CollectionEntry_InlineEntry);

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends { $case: string } ? { [K in keyof Omit<T, "$case">]?: DeepPartial<T[K]> } & { $case: T["$case"] }
  : T extends {} ? { [K in Exclude<keyof T, "$type">]?: DeepPartial<T[K]> }
  : Partial<T>;

type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin ? P
  : P & { [K in keyof P]: Exact<P[K], I[K]> } & { [K in Exclude<keyof I, KeysOfUnion<P> | "$type">]: never };

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T, V extends string> {
  readonly $type: V;
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;
  fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;
}
