import {OutType} from '@/elchi/tags/tagsType';


export const CustomResponse: OutType = { "CustomResponse": [
  {
    "name": "custom_response_matcher",
    "isUnion": false,
    "isDeprecated": false,
    "fieldType": "Matcher",
    "enums": null,
    "comment": "Matcher to match against the original response to select a `Custom Response Policy` that will override the original response. The matching is done by matching against `response header values` Example:\n\n```yaml\n  :type-name: xds.type.matcher.v3.Matcher\n\n  matcher_list:\n    matchers:\n      # Apply a locally stored custom response to any 4xx response.\n    - predicate:\n        single_predicate:\n          input:\n            name: 4xx_response\n            typed_config:\n              \"@type\": type.googleapis.com/envoy.type.matcher.v3.HttpResponseStatusCodeClassMatchInput\n          value_match:\n            exact: \"4xx\"\n      on_match:\n        action:\n          name: action\n          typed_config:\n            \"@type\": type.googleapis.com/envoy.extensions.http.custom_response.local_response_policy.v3.LocalResponsePolicy\n            status_code: 499\n            body:\n              inline_string: \"not allowed\"\n            body_format:\n              json_format:\n                status: \"%RESPONSE_CODE%\"\n                message: \"%LOCAL_REPLY_BODY%\"\n            response_headers_to_add:\n            - header:\n                key: \"foo\"\n                value: \"x-bar\"\n      # Redirect to different upstream if the status code is one of 502, 503 or 504.\n    - predicate:\n        or_matcher:\n          predicate:\n          - single_predicate:\n              input:\n                name: \"502_response\"\n                typed_config:\n                  \"@type\": type.googleapis.com/envoy.type.matcher.v3.HttpResponseStatusCodeMatchInput\n              value_match:\n                exact: \"502\"\n          - single_predicate:\n              input:\n                name: \"503_response\"\n                typed_config:\n                  \"@type\": type.googleapis.com/envoy.type.matcher.v3.HttpResponseStatusCodeMatchInput\n              value_match:\n                exact: \"503\"\n          - single_predicate:\n              input:\n                name: \"504_response\"\n                typed_config:\n                  \"@type\": type.googleapis.com/envoy.type.matcher.v3.HttpResponseStatusCodeMatchInput\n              value_match:\n                exact: \"504\"\n      on_match:\n        action:\n          name: action\n          typed_config:\n            \"@type\": type.googleapis.com/envoy.extensions.http.custom_response.redirect_policy.v3.RedirectPolicy\n            status_code: 299\n            uri: \"https://foo.example/gateway_error\"\n            response_headers_to_add:\n            - header:\n                key: \"foo2\"\n                value: \"x-bar2\"\n```\n -- attention:: The first matched policy wins. Once the response is matched, matcher evaluations end.\n\nRefer to `Unified Matcher API` documentation for more information on the matcher trees. extension-category: envoy.http.custom_response",
    "notImp": false
  }
] };