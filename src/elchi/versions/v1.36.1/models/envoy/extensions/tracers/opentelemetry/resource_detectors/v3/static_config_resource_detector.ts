// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.7
//   protoc               unknown
// source: envoy/extensions/tracers/opentelemetry/resource_detectors/v3/static_config_resource_detector.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import { messageTypeRegistry } from "../../../../../../typeRegistry";

export const protobufPackage = "envoy.extensions.tracers.opentelemetry.resource_detectors.v3";

/**
 * Configuration for the Static Resource detector extension.
 * The resource detector uses static config for resource attribute,
 * as per the OpenTelemetry specification.
 *
 * [#extension: envoy.tracers.opentelemetry.resource_detectors.static_config]
 */
export interface StaticConfigResourceDetectorConfig {
  $type: "envoy.extensions.tracers.opentelemetry.resource_detectors.v3.StaticConfigResourceDetectorConfig";
  /** Custom Resource attributes to be included. */
  attributes?: Map<string, string> | undefined;
}

export interface StaticConfigResourceDetectorConfig_AttributesEntry {
  $type:
    "envoy.extensions.tracers.opentelemetry.resource_detectors.v3.StaticConfigResourceDetectorConfig.AttributesEntry";
  key: string;
  value: string;
}

function createBaseStaticConfigResourceDetectorConfig(): StaticConfigResourceDetectorConfig {
  return { $type: "envoy.extensions.tracers.opentelemetry.resource_detectors.v3.StaticConfigResourceDetectorConfig" };
}

export const StaticConfigResourceDetectorConfig: MessageFns<
  StaticConfigResourceDetectorConfig,
  "envoy.extensions.tracers.opentelemetry.resource_detectors.v3.StaticConfigResourceDetectorConfig"
> = {
  $type: "envoy.extensions.tracers.opentelemetry.resource_detectors.v3.StaticConfigResourceDetectorConfig" as const,

  encode(message: StaticConfigResourceDetectorConfig, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    (message.attributes || new Map()).forEach((value, key) => {
      StaticConfigResourceDetectorConfig_AttributesEntry.encode({
        $type:
          "envoy.extensions.tracers.opentelemetry.resource_detectors.v3.StaticConfigResourceDetectorConfig.AttributesEntry",
        key: key as any,
        value,
      }, writer.uint32(10).fork()).join();
    });
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): StaticConfigResourceDetectorConfig {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseStaticConfigResourceDetectorConfig();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1: {
          if (tag !== 10) {
            break;
          }

          const entry1 = StaticConfigResourceDetectorConfig_AttributesEntry.decode(reader, reader.uint32());
          if (entry1.value !== undefined) {
            if (message.attributes === undefined) {
              message.attributes = new Map();
            }
            message.attributes!.set(entry1.key, entry1.value);
          }
          continue;
        }
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): StaticConfigResourceDetectorConfig {
    return {
      $type: StaticConfigResourceDetectorConfig.$type,
      attributes: isObject(object.attributes)
        ? Object.entries(object.attributes).reduce<Map<string, string>>((acc, [key, value]) => {
          acc.set(key, String(value));
          return acc;
        }, new Map())
        : undefined,
    };
  },

  toJSON(message: StaticConfigResourceDetectorConfig): unknown {
    const obj: any = {};
    if (message.attributes?.size) {
      obj.attributes = {};
      message.attributes.forEach((v, k) => {
        obj.attributes[k] = v;
      });
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<StaticConfigResourceDetectorConfig>, I>>(
    base?: I,
  ): StaticConfigResourceDetectorConfig {
    return StaticConfigResourceDetectorConfig.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<StaticConfigResourceDetectorConfig>, I>>(
    object: I,
  ): StaticConfigResourceDetectorConfig {
    const message = createBaseStaticConfigResourceDetectorConfig();
    message.attributes = (object.attributes === undefined || object.attributes === null) ? undefined : (() => {
      const m = new Map();
      (object.attributes as Map<string, string> ?? new Map()).forEach((value, key) => {
        if (value !== undefined) {
          m.set(key, globalThis.String(value));
        }
      });
      return m;
    })();
    return message;
  },
};

messageTypeRegistry.set(StaticConfigResourceDetectorConfig.$type, StaticConfigResourceDetectorConfig);

function createBaseStaticConfigResourceDetectorConfig_AttributesEntry(): StaticConfigResourceDetectorConfig_AttributesEntry {
  return {
    $type:
      "envoy.extensions.tracers.opentelemetry.resource_detectors.v3.StaticConfigResourceDetectorConfig.AttributesEntry",
    key: "",
    value: "",
  };
}

export const StaticConfigResourceDetectorConfig_AttributesEntry: MessageFns<
  StaticConfigResourceDetectorConfig_AttributesEntry,
  "envoy.extensions.tracers.opentelemetry.resource_detectors.v3.StaticConfigResourceDetectorConfig.AttributesEntry"
> = {
  $type:
    "envoy.extensions.tracers.opentelemetry.resource_detectors.v3.StaticConfigResourceDetectorConfig.AttributesEntry" as const,

  encode(
    message: StaticConfigResourceDetectorConfig_AttributesEntry,
    writer: BinaryWriter = new BinaryWriter(),
  ): BinaryWriter {
    if (message.key !== "") {
      writer.uint32(10).string(message.key);
    }
    if (message.value !== "") {
      writer.uint32(18).string(message.value);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): StaticConfigResourceDetectorConfig_AttributesEntry {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseStaticConfigResourceDetectorConfig_AttributesEntry();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1: {
          if (tag !== 10) {
            break;
          }

          message.key = reader.string();
          continue;
        }
        case 2: {
          if (tag !== 18) {
            break;
          }

          message.value = reader.string();
          continue;
        }
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): StaticConfigResourceDetectorConfig_AttributesEntry {
    return {
      $type: StaticConfigResourceDetectorConfig_AttributesEntry.$type,
      key: isSet(object.key) ? globalThis.String(object.key) : "",
      value: isSet(object.value) ? globalThis.String(object.value) : "",
    };
  },

  toJSON(message: StaticConfigResourceDetectorConfig_AttributesEntry): unknown {
    const obj: any = {};
    if (message.key !== undefined) {
      obj.key = message.key;
    }
    if (message.value !== undefined) {
      obj.value = message.value;
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<StaticConfigResourceDetectorConfig_AttributesEntry>, I>>(
    base?: I,
  ): StaticConfigResourceDetectorConfig_AttributesEntry {
    return StaticConfigResourceDetectorConfig_AttributesEntry.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<StaticConfigResourceDetectorConfig_AttributesEntry>, I>>(
    object: I,
  ): StaticConfigResourceDetectorConfig_AttributesEntry {
    const message = createBaseStaticConfigResourceDetectorConfig_AttributesEntry();
    message.key = object.key ?? "";
    message.value = object.value ?? "";
    return message;
  },
};

messageTypeRegistry.set(
  StaticConfigResourceDetectorConfig_AttributesEntry.$type,
  StaticConfigResourceDetectorConfig_AttributesEntry,
);

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends { $case: string } ? { [K in keyof Omit<T, "$case">]?: DeepPartial<T[K]> } & { $case: T["$case"] }
  : T extends {} ? { [K in Exclude<keyof T, "$type">]?: DeepPartial<T[K]> }
  : Partial<T>;

type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin ? P
  : P & { [K in keyof P]: Exact<P[K], I[K]> } & { [K in Exclude<keyof I, KeysOfUnion<P> | "$type">]: never };

function isObject(value: any): boolean {
  return typeof value === "object" && value !== null;
}

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T, V extends string> {
  readonly $type: V;
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;
  fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;
}
