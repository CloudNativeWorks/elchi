name: Build and Push Images

on:
  workflow_dispatch:
    inputs:
      platforms:
        description: 'Target platforms (comma separated)'
        required: true
        type: choice
        options:
          - 'linux/amd64'
          - 'linux/arm64'
          - 'linux/amd64,linux/arm64'

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_IMAGE: elchi

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.GH_PAT }}

      - name: Set Project Version
        run: |
          echo "PROJECT_VERSION=$(cat VERSION)" >> $GITHUB_ENV

      - name: Checkout release tag
        uses: actions/checkout@v4
        with:
          ref: v${{ env.PROJECT_VERSION }}
          path: release
          token: ${{ secrets.GH_PAT }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: ${{ github.event.inputs.platforms }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Build and push images
        working-directory: release
        env:
          DOCKER_BUILDKIT: 1
        run: |
          # Set image tags
          IMAGE_NAME="${DOCKER_USERNAME}/${DOCKER_IMAGE}"
          VERSION_TAG="${IMAGE_NAME}:v${PROJECT_VERSION}"
          LATEST_TAG="${IMAGE_NAME}:latest"
          
          echo "Building images with tags:"
          echo "Version tag: ${VERSION_TAG}"
          echo "Latest tag: ${LATEST_TAG}"
          
          # Build and push
          docker buildx build \
            --no-cache \
            --platform ${{ github.event.inputs.platforms }} \
            --build-arg "APP_VERSION=${PROJECT_VERSION}" \
            -t "${VERSION_TAG}" \
            -t "${LATEST_TAG}" \
            --push \
            .
          
          echo "âœ… Docker image build completed"
          echo "Image tags:"
          echo "- ${VERSION_TAG}"
          echo "- ${LATEST_TAG}" 